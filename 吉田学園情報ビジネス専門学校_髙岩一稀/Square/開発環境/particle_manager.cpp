//=============================================================================
//
// エフェクト処理 [effect.cpp]
// Author : 
//
//=============================================================================
#include "particle_manager.h"
#include "manager.h"
#include "renderer.h"
#include "tile.h"

//*****************************************************************************
// 静的メンバ変数宣言
//*****************************************************************************

//=============================================================================
// CParticlManagerのコンストラクタ
//=============================================================================
CParticlManager::CParticlManager()
{

}

//=============================================================================
// CParticlManagerのデストラクタ
//=============================================================================
CParticlManager::~CParticlManager()
{

}

//=============================================================================
// 生成処理
//=============================================================================
CParticlManager *CParticlManager::Create(void)
{
	// ポインタ変数の生成
	CParticlManager *pParticleManager;
	pParticleManager = new CParticlManager;

	// NULLチェック
	if (pParticleManager != NULL)
	{
		// 初期化処理
		pParticleManager->Init();
	}

	return pParticleManager;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CParticlManager::Init(void)
{
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CParticlManager::Uninit(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void CParticlManager::Update(void)
{

}

//=============================================================================
// 描画処理
//=============================================================================
void CParticlManager::Draw(void)
{

}